						GIT COMMANDS

Check the version, or git installation confirmation by following command
	git --version


Git Local prerequisites
--------------------------------------------------------------------------------------------
Initialising a git directory	
	git init

Listing configuration settings whether user.name and user.email have been set already or not
	git config --list

Setting name configuration globally
	git config --global user.name "ASHISH JAIN"

Setting email configuration globally
	git config --global user.email "ASHISHJAINTECH@GMAIL.COM" 

Setting editor for ubuntu os
	git config --global core.editor Vim  
---------------------------------------------------------------------------------------------


Adding key to remote for getting access
----------------------------------------------------------------------------------------------
Simple Key generation process for adding our id_rsa.pub key in gerrit setting in ssh add key section 
	ssh-keygen
hit enter many times, it will generate file id_rsa.pub and give you the path of id_rsa.pub
just copy the content in id_rsa.pub file and add in settings
----------------------------------------------------------------------------------------------
	

Cloning branch from remote by https
	git clone https://github.com/ashishjaintech/git.git
or ssh
	git clone git@github.com:ashishjaintech/git.git


Commiting files to remote or intermediatory repository
----------------------------------------------------------------------------------------------
Adding all files after change
	git add *

Committing added files with comment
	git commit -m "Git start with initial commands"

Then same process, we can also add and commit with single command if file has been updated only
	git commit -am "Added more commands"

If there is an intermidiate verification process integrated like gerrit for review then pushing commited files
	git push origin HEAD:refs/for/<branch name>

Or pusing committed files to remote directly if gerrit is not there, it will ask credentials
	git push
----------------------------------------------------------------------------------------------


For checking any change in repository
	git status
	
For checking current branch
	git branch
	
For checking all branch
	git branch -a

Git new branch creation from existing branch
	git branch <newbranchname> 

Git new branch creation and checkout to new branch
	git checkout <existingbranch> <newbranchname> 

Git checkout clears current changes in file and make it in sync with remote version
	git checkout gradle.properties

Git checkout clears all changes made in current local branch and sync it with remote version
	git checkout .


Before running push command local files should be in sync with remote branch, 
----------------------------------------------------------------------------------------------
First we should save our changes in stash
	git stash

For sync with remote branch
	git pull --rebase

For getting the previous saved code from stash 
	git stash pop

You may have some conflict after stash pop command, resolve conflict manually 
then do 
Adding all files after change
	git add *

Committing added files with comment
	git commit -m "Git start with initial commands"

If there is an intermidiate verification process integrated like gerrit for review then pushing commited files
	git push origin HEAD:refs/for/<branch name>

Or pusing committed files to remote directly if gerrit is not there, it will ask credentials
	git push

----------------------------------------------------------------------------------------------


How to cherry-pick one commit from one branch to another branch and push to remote
----------------------------------------------------------------------------------------------
it will show you the commits, take the commit id you want to cherry-pick in another branch
	git log 

checkout in another branch where you want to cherry-pick.
	git checkout <branch name>

run cherry-pick command with commit id
	git cherry-pick <commitid>

it is possible you cherry-pick may create conflich in code, then solve conflict manually and add files
	git add *

then instead of adding commit with a message run following, this command should only run when there is conflict
	git cherry-pick --continue
	
If there is an intermidiate verification process integrated like gerrit for review then pushing commited files
	git push origin HEAD:refs/for/<branch name>

Or pusing committed files to remote directly if gerrit is not there, it will ask credentials
	git push	
-----------------------------------------------------------------------------------------------	

Ammend the your last commit after pushing code to gerrit 
or 
If something needs to be changed in review
----------------------------------------------------------------------------------------------
Put the current changes in files to stash
	git stash 
	
Make the required changes in the files

Adding all files after change
	git add *
	
Take the change id of you commit from gerrit

Amending with change id in commit command, it will open a new window where you can put copied gerrit change id in 
second blank line or ignore if change id is there already during multiple amends
	git commit --amend 

Pushing commited files and ask for review again
	git push origin HEAD:refs/for/<branch name>	
----------------------------------------------------------------------------------------------


Pushing to a new created repository on git hub	
----------------------------------------------------------------------------------------------
git clone https:<path>
git add *
git commit -m
git may ask you to set config or user.name or user.email while committing if not set already
git push -u origin master
git may ask you to enter user name and password on website open dialog
----------------------------------------------------------------------------------------------
